{"version":3,"sources":["App.module.css","containers/Orders/Orders.module.css","components/UI/Loader/Loader.module.css","containers/Upload/Upload.module.css","components/UI/Button/Button.module.css","components/Error/Error.module.css","store/reducers/rootReducer.js","store/store.js","store/actions/ActionTypes.js","components/UI/Button/Button.js","axios/axios.js","containers/Upload/Upload.js","store/actions/uploadCSV.js","components/UI/Loader/Loader.js","components/Order/Order.js","store/actions/getOrders.js","components/Error/Error.js","containers/Orders/Orders.js","store/actions/closeErr.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","orders","loading","err","store","createStore","state","action","type","data","applyMiddleware","thunk","Button","props","onClick","clickHandler","className","cls","children","axios","create","baseURL","process","connect","dispatch","uploadCSV","a","console","log","fd","FormData","append","post","form","onSubmit","event","preventDefault","file","target","uploadFile","files","length","history","push","htmlFor","id","accept","Loader","LoaderElement","Order","number","user","date","value","currency","status","fetchSuccess","Error","getOrders","get","res","closeErr","useState","setOrders","sortType","setSortType","useEffect","useLayoutEffect","Orders","tOrder","map","e","key","Math","random","newOrders","sort","b","thead","order","i","_id","num","user_email","downloadLink","href","App","header","navbar","link","exact","activeClassName","linkActive","to","path","component","Upload","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,OAAS,oBAAoB,KAAO,kBAAkB,WAAa,0B,mBCAlHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,aAAe,+B,mBCAnGD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,kBAAkB,gCAAgC,kBAAkB,gCAAgC,kBAAkB,gCAAgC,OAAS,yB,mBCA/ND,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,wCCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,qKCKpBC,EAAe,CACnBC,OAAQ,GACRC,SAAS,EACTC,IAAK,M,YCHQC,EAFDC,aDOC,WAA+C,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAC3D,OAAQA,EAAOC,MACb,IEbuB,cFcrB,OAAO,eACFF,EADL,CAEEJ,SAAS,IAGb,IElByB,gBFmBvB,OAAO,eACFI,EADL,CAEEJ,SAAS,EACTD,OAAQM,EAAOE,OAEnB,IEvBuB,cFwBrB,OAAO,eACFH,EADL,CAEEJ,SAAS,EACTC,IAAKI,EAAOJ,MAEhB,IE5BqB,YF6BnB,OAAO,eACFG,EADL,CAEEH,IAAK,OAGT,QACE,OAAOG,KClC0BI,YAAgBC,M,0CEDxC,SAASC,EAAOC,GAC7B,OACE,oCACE,4BACEC,QAASD,EAAME,aACfC,UAAWC,IAAIL,OACfJ,KAAMK,EAAML,MAEXK,EAAMK,W,qCCTAC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAASC,+CCyBIC,kBAAQ,MALvB,SAA4BC,GAC1B,MAAO,CACLC,UAAW,SAAAhB,GAAI,OAAIe,ECvBR,SAAmBf,GAChC,8CAAO,WAAMe,GAAN,eAAAE,EAAA,sDACLC,QAAQC,IAAInB,IACNoB,EAAK,IAAIC,UACZC,OAAO,OAAQtB,GAClBU,EAAMa,KAAK,cAAeH,GAJrB,2CAAP,mDAAM,GDsBwBJ,CAAUhB,QAG3Bc,EAtBf,SAAgBV,GASd,OACE,0BAAMG,UAAWC,IAAIgB,KAAMC,SAT7B,SAAuBC,GACrBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOC,WAAWC,MACjCH,EAAKI,SACP5B,EAAMY,UAAUY,EAAK,IACrBxB,EAAM6B,QAAQC,KAAK,QAKnB,2BAAOC,QAAQ,cAAf,6BACA,2BAAOpC,KAAK,OAAOqC,GAAG,aAAaC,OAAO,SAC1C,kBAAClC,EAAD,CAAQJ,KAAK,UAAb,c,kDEhBS,SAASuC,IACtB,OACE,yBAAK/B,UAAWC,IAAI8B,QAClB,yBAAK/B,UAAWC,IAAI+B,eAClB,8BACA,8BACA,gC,qBCNO,SAASC,EAAMpC,GAC5B,OACE,wBAAIG,UAAWC,IAAIgC,OACjB,4BAAKpC,EAAMqC,QACX,4BAAKrC,EAAMsC,MACX,4BAAKtC,EAAMuC,MACX,4BAAKvC,EAAMwC,OACX,4BAAKxC,EAAMyC,UACX,4BAAKzC,EAAM0C,SCSjB,SAASC,EAAa/C,GACpB,MAAO,CACLD,KPrByB,gBOsBzBC,Q,qBCnBW,SAASgD,EAAM5C,GAC5B,OACE,yBAAKG,UAAWC,IAAIwC,OAClB,2BAAI5C,EAAMK,UACV,kBAACN,EAAD,CAAQG,aAAcF,EAAME,cAA5B,OCkGSQ,mBAbf,SAAyBjB,GACvB,MAAO,CACLL,OAAQK,EAAML,OACdC,QAASI,EAAMJ,QACfC,IAAKG,EAAMH,QAGf,SAA4BqB,GAC1B,MAAO,CACLkC,UAAW,kBAAMlC,EFlGnB,uCAAO,WAAMA,GAAN,iBAAAE,EAAA,6DACLF,EAWK,CACLhB,KPjBuB,gBOIlB,kBAGeW,EAAMwC,IAAI,eAHzB,OAGGC,EAHH,OAIGnD,EAAOmD,EAAInD,KACjBe,EAASgC,EAAa/C,IALnB,gDAOHe,EAgBG,CACLhB,KP1BuB,cO2BvBL,IAlBsB,EAAD,KAPhB,yDAAP,mDAAM,KEmGJ0D,SAAU,kBAAMrC,ECrGX,CACLhB,KVAqB,kBSuGVe,EAjGf,SAAgBV,GAAQ,IAAD,EACOiD,mBAAS,IADhB,mBACd7D,EADc,KACN8D,EADM,OAEWD,mBAAS,CAAC,MAAO,KAF5B,mBAEdE,EAFc,KAEJC,EAFI,KA+BrB,OA5BAC,qBAAU,WACRrD,EAAM6C,cACL,IACHS,2BAAgB,WACdJ,EAAUlD,EAAMZ,UACf,CAACY,EAAMZ,SAwBR,yBAAKe,UAAWC,IAAImD,QACjBvD,EAAMV,IACL,kBAACsD,EAAD,CAAO1C,aAAcF,EAAMgD,UAAWhD,EAAMV,KAC1C,KACJ,sCACCU,EAAMX,QACL,kBAAC6C,EAAD,MAEA,2BAAO/B,UAAWC,IAAIoD,QACpB,+BACE,4BAhCG,CACX,CAAC,MAAO,UACR,CAAC,aAAc,cACf,CAAC,OAAQ,QACT,CAAC,QAAS,SACV,CAAC,WAAY,YACb,CAAC,SAAU,WA2BKC,KAAI,SAAAC,GAAC,OACT,wBACEC,IAAKC,KAAKC,SACV5D,QAAS,kBA3BzB,SAAcN,GACZ,IAAMmE,EAAS,YAAO1E,GAClB+D,EAAS,KAAOxD,GAClBmE,EAAUC,MAAK,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAElB,GAAQqE,EAAErE,MACrCyD,EAAY,CAAC,GAAIzD,MAEjBmE,EAAUC,MAAK,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAElB,GAAQqE,EAAErE,MACrCyD,EAAY,CAACzD,EAAM,MAErBuD,EAAUY,GAkBmBC,CAAKL,EAAE,KACtBvD,UAAWC,IAAI6D,OAEdP,EAAE,GACFP,EAAS,KAAOO,EAAE,GACjB,uBAAGvD,UAAU,sBACXgD,EAAS,KAAOO,EAAE,GACpB,uBAAGvD,UAAU,oBACX,WAKZ,+BACGf,EAAOqE,KAAI,SAACS,EAAOC,GAAR,OACV,kBAAC/B,EAAD,CACEuB,IAAKO,EAAME,IACX/B,OAAQ6B,EAAMG,IAAM,EACpB/B,KAAM4B,EAAMI,WACZ/B,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,SAAUyB,EAAMzB,SAChBC,OAAQwB,EAAMxB,cAMxB,uBACEvC,UAAWC,IAAImE,aACfC,KAAI,UAAK/D,6CAAL,kBAFN,gB,wBE/CSgE,MA9Bf,SAAazE,GACX,OACE,yBAAKG,UAAWC,IAAIqE,KAClB,4BAAQtE,UAAWC,IAAIsE,QACrB,yBAAKvE,UAAWC,IAAIuE,QAClB,kBAAC,IAAD,CACExE,UAAWC,IAAIwE,KACfC,OAAK,EACLC,gBAAiB1E,IAAI2E,WACrBC,GAAG,KAJL,QAQA,kBAAC,IAAD,CACE7E,UAAWC,IAAIwE,KACfE,gBAAiB1E,IAAI2E,WACrBC,GAAG,WAHL,YASJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIJ,OAAK,EAACK,UAAW3B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,UAAUC,UAAWC,OClBrBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,CAAUnG,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJoG,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.44da7661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__fd1tQ\",\"navbar\":\"App_navbar__BErtr\",\"link\":\"App_link__uU5Qb\",\"linkActive\":\"App_linkActive__3HJN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__1xCMM\",\"tOrders\":\"Orders_tOrders__1h4Of\",\"downloadLink\":\"Orders_downloadLink__16VFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoaderElement\":\"Loader_LoaderElement__TKJt8\",\"LoaderElement-1\":\"Loader_LoaderElement-1__1Uyso\",\"LoaderElement-2\":\"Loader_LoaderElement-2__7_93Z\",\"LoaderElement-3\":\"Loader_LoaderElement-3__3QRqg\",\"Loader\":\"Loader_Loader__2nfeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Upload_form__WWOh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__pg2i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__3efFs\"};","import {\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  FETCH_ERROR,\r\n  CLOSE_ERR\r\n} from \"../actions/ActionTypes\";\r\nconst initialState = {\r\n  orders: [],\r\n  loading: true,\r\n  err: null\r\n};\r\nexport default function orders(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    }\r\n    case FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: action.data\r\n      };\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        err: action.err\r\n      };\r\n    case CLOSE_ERR: {\r\n      return {\r\n        ...state,\r\n        err: null\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export const FETCH_START = \"FETCH_START\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\nexport const CLOSE_ERR = \"CLOSE_ERR\";\r\n","import React from \"react\";\r\nimport cls from \"./Button.module.css\";\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={props.clickHandler}\r\n        className={cls.Button}\r\n        type={props.type}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.PUBLIC_URL\r\n});\r\n","import React from \"react\";\r\nimport cls from \"./Upload.module.css\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport uploadCSV from \"../../store/actions/uploadCSV\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Upload(props) {\r\n  function uploadHandler(event) {\r\n    event.preventDefault();\r\n    const file = event.target.uploadFile.files;\r\n    if (file.length) {\r\n      props.uploadCSV(file[0]);\r\n      props.history.push(\"/\");\r\n    }\r\n  }\r\n  return (\r\n    <form className={cls.form} onSubmit={uploadHandler}>\r\n      <label htmlFor=\"uploadFile\">Choose CSV file to upload</label>\r\n      <input type=\"file\" id=\"uploadFile\" accept=\".csv\" />\r\n      <Button type=\"submit\">Upload</Button>\r\n    </form>\r\n  );\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    uploadCSV: data => dispatch(uploadCSV(data))\r\n  };\r\n}\r\nexport default connect(null, mapDispatchToProps)(Upload);\r\n","import axios from \"../../axios/axios\";\r\n\r\nexport default function uploadCSV(data) {\r\n  return async dispatch => {\r\n    console.log(data);\r\n    const fd = new FormData();\r\n    fd.append(\"file\", data)\r\n    axios.post(\"/api/upload\", fd);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Loader.module.css\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className={cls.Loader}>\r\n      <div className={cls.LoaderElement}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Order.module.css\";\r\n\r\nexport default function Order(props) {\r\n  return (\r\n    <tr className={cls.Order}>\r\n      <th>{props.number}</th>\r\n      <th>{props.user}</th>\r\n      <th>{props.date}</th>\r\n      <th>{props.value}</th>\r\n      <th>{props.currency}</th>\r\n      <th>{props.status}</th>\r\n    </tr>\r\n  );\r\n}\r\n","import axios from \"../../axios/axios\";\r\nimport { FETCH_START, FETCH_SUCCESS, FETCH_ERROR } from \"./ActionTypes\";\r\n\r\nexport default function getOrders() {\r\n  return async dispatch => {\r\n    dispatch(fetchStart());\r\n    try {\r\n      const res = await axios.get(\"/api/orders\");\r\n      const data = res.data;\r\n      dispatch(fetchSuccess(data));\r\n    } catch (err) {\r\n      dispatch(fetchError(err));\r\n    }\r\n  };\r\n}\r\nfunction fetchStart() {\r\n  return {\r\n    type: FETCH_START\r\n  };\r\n}\r\nfunction fetchSuccess(data) {\r\n  return {\r\n    type: FETCH_SUCCESS,\r\n    data\r\n  };\r\n}\r\nfunction fetchError(err) {\r\n  return {\r\n    type: FETCH_ERROR,\r\n    err\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Error.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nexport default function Error(props) {\r\n  return (\r\n    <div className={cls.Error}>\r\n      <p>{props.children}</p>\r\n      <Button clickHandler={props.clickHandler}>OK</Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport cls from \"./Orders.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport getOrders from \"../../store/actions/getOrders\";\r\nimport closeErr from \"../../store/actions/closeErr\";\r\nimport Error from \"../../components/Error/Error\";\r\n\r\nfunction Orders(props) {\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortType, setSortType] = useState([\"num\", \"\"]);\r\n  useEffect(() => {\r\n    props.getOrders();\r\n  }, []);\r\n  useLayoutEffect(() => {\r\n    setOrders(props.orders);\r\n  }, [props.orders]);\r\n\r\n  const data = [\r\n    [\"num\", \"№\"],\r\n    [\"user_email\", \"User email\"],\r\n    [\"date\", \"date\"],\r\n    [\"value\", \"value\"],\r\n    [\"currency\", \"currency\"],\r\n    [\"status\", \"status\"]\r\n  ];\r\n\r\n  function sort(type) {\r\n    const newOrders = [...orders];\r\n    if (sortType[0] === type) {\r\n      newOrders.sort((a, b) => a[type] < b[type]);\r\n      setSortType([\"\", type]);\r\n    } else {\r\n      newOrders.sort((a, b) => a[type] > b[type]);\r\n      setSortType([type, \"\"]);\r\n    }\r\n    setOrders(newOrders);\r\n  }\r\n\r\n  return (\r\n    <div className={cls.Orders}>\r\n      {props.err ? (\r\n        <Error clickHandler={props.closeErr}>{props.err}</Error>\r\n      ) : null}\r\n      <h2>Orders</h2>\r\n      {props.loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <table className={cls.tOrder}>\r\n          <thead>\r\n            <tr>\r\n              {data.map(e => (\r\n                <th\r\n                  key={Math.random()}\r\n                  onClick={() => sort(e[0])}\r\n                  className={cls.thead}\r\n                >\r\n                  {e[1]}\r\n                  {sortType[0] === e[0] ? (\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  ) : sortType[1] === e[0] ? (\r\n                    <i className=\"fas fa-angle-up\"></i>\r\n                  ) : null}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, i) => (\r\n              <Order\r\n                key={order._id}\r\n                number={order.num + 1}\r\n                user={order.user_email}\r\n                date={order.date}\r\n                value={order.value}\r\n                currency={order.currency}\r\n                status={order.status}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n      <a\r\n        className={cls.downloadLink}\r\n        href={`${process.env.PUBLIC_URL}/api/download`}\r\n      >\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orders: state.orders,\r\n    loading: state.loading,\r\n    err: state.err\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getOrders: () => dispatch(getOrders()),\r\n    closeErr: () => dispatch(closeErr())\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n","import { CLOSE_ERR } from \"./ActionTypes\";\r\nexport default function closeErr() {\r\n  return {\r\n    type: CLOSE_ERR\r\n  };\r\n}\r\n","import React from \"react\";\nimport Upload from \"./containers/Upload/Upload\";\nimport Orders from \"./containers/Orders/Orders\";\nimport { NavLink, Route, Switch } from \"react-router-dom\";\nimport cls from \"./App.module.css\";\n\nfunction App(props) {\n  return (\n    <div className={cls.App}>\n      <header className={cls.header}>\n        <nav className={cls.navbar}>\n          <NavLink\n            className={cls.link}\n            exact\n            activeClassName={cls.linkActive}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={cls.link}\n            activeClassName={cls.linkActive}\n            to=\"/upload\"\n          >\n            Upload\n          </NavLink>\n        </nav>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={Orders} />\n        <Route path=\"/upload\" component={Upload} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}